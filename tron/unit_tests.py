# 8-queens solver with genetic algorithm implementation
# unit tests

import unittest
from player import Evaluator, TronBoard, Player, map_move_to_string, move

class TronTests(unittest.TestCase):

    def test_move_validity(self):

        current_player = 'g'
        pos1 = [8, 1] 
        pos2 = [8, 13]
        board = [['#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'], 
                ['#','-','-','-','-','-','-','-','-','-','-','-','-','-','#'],
                ['#','-','-','-','-','-','-','-','-','-','-','-','-','-','#'],
                ['#','-','-','-','-','-','-','-','-','-','-','-','-','-','#'],
                ['#','-','-','-','-','-','-','-','-','-','-','-','-','-','#'],
                ['#','-','-','-','-','-','-','-','-','-','-','-','-','-','#'],
                ['#','-','-','-','-','-','-','-','-','-','-','-','-','-','#'],
                ['#','r','-','-','-','-','-','-','-','-','-','-','-','g','#'],
                ['#','r','-','-','-','-','-','-','-','-','-','-','-','g','#'],
                ['#','-','-','-','-','-','-','-','-','-','-','-','-','-','#'],
                ['#','-','-','-','-','-','-','-','-','-','-','-','-','-','#'],
                ['#','-','-','-','-','-','-','-','-','-','-','-','-','-','#'],
                ['#','-','-','-','-','-','-','-','-','-','-','-','-','-','#'],
                ['#','-','-','-','-','-','-','-','-','-','-','-','-','-','#'],
                ['#','#','#','#','#','#','#','#','#','#','#','#','#','#','#']]
    
        best_move = move(current_player, 'r', 'g', pos1, pos2, board)
        print(best_move)

if __name__ == '__main__':
    unittest.main()

